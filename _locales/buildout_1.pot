# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-28 20:53-0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../buildout_1.rst:2
# 80156a3ba8904faaba5aef8d4703302d
msgid "Buildout I"
msgstr ""

#: ../buildout_1.rst:6
# fe1c8afd25484ed3856aab2428e8b3f7
msgid "`Buildout <https://pypi.python.org/pypi/zc.buildout>`_ composes your application for you, according to your rules."
msgstr ""

#: ../buildout_1.rst:8
# 353a757554c34578a4dbe997093f5e0a
msgid "To compose your application you must define the eggs you need, which version, what configuration files Buildout has to generate for you, what to download and compile, and so on. Buildout downloads the eggs you requested and resolves all dependencies. You might need five different eggs, but in the end, Buildout has to install 300 eggs, all with the correct version."
msgstr ""

#: ../buildout_1.rst:11
# b8ff89c03ada4da79883d85d2e09f9df
msgid "Plone needs folders for logfiles, databases and configuration files. Buildout assembles all of this for you."
msgstr ""

#: ../buildout_1.rst:13
# e08c42f0128e483085e3e29fa098cd73
msgid "You will need a lot of functionality that Buildout does not provide out of the box, so you'll need several extensions. Some extensions provide whole new functionality, like mr.developer, the only way to manage your checked out sources."
msgstr ""

#: ../buildout_1.rst:18
# bdd5921eec564619ad4af06b321a7d48
msgid "Syntax"
msgstr ""

#: ../buildout_1.rst:22
# 6a1fdfdfe9e9488a9cae2c4ef989bdf7
msgid "The syntax of Buildout configuration files is similar to classic ini files. You write a parameter name, an equals sign and the value. If you enter another value in the next line and indent it, Buildout understands that both values belong to the parameter name, and the parameter stores all values as a list."
msgstr ""

#: ../buildout_1.rst:24
# ce5b47ea1428402db5c868717331ba2e
msgid "A Buildout consists of multiple sections. Sections start with the section name in square brackets. Each section declares a different part of your application. As a rough analogy, your Buildout file is a cookbook with multiple recipes."
msgstr ""

#: ../buildout_1.rst:26
# 7abeb38190cc48e48266120eb20fe136
msgid "There is a special section, called `[buildout]`. This section can change the behavior of Buildout itself. The variable :samp:`parts` defines, which of the existing sections should actually be used."
msgstr ""

#: ../buildout_1.rst:29
# 2124002267184b35880e96c7b145963d
msgid "Recipes"
msgstr ""

#: ../buildout_1.rst:31
# e676f9080d444af3bc369516082749f7
msgid "Buildout itself has no idea how to install Zope. Buildout is a plugin based system, it comes with a small set of plugins to create configuration files and download eggs with their dependencies and the proper version. To install a Zope site, you need a third-party plugin. The plugin provide new recipes that you have to declare and configure in a section."
msgstr ""

#: ../buildout_1.rst:33
# aad41d8613d24e51924367a9c2ab5277
msgid "One example is the section"
msgstr ""

#: ../buildout_1.rst:41
# 06c00cee31ed48f3b07dde499a500b67
msgid "This uses the python-package `plone.recipe.zope2instance <http://pypi.python.org/pypi/plone.recipe.zope2instance>`_ to create and configure the Zope 2 instance which we use to run Plone. All the lines after ``recipe = xyz`` are the configuration of the used recipe."
msgstr ""

#: ../buildout_1.rst:45
# 85f25dea0ab94930b48e9fb114fc2d4c
msgid "http://www.buildout.org/en/latest/docs/recipelist.html"
msgstr ""

#: ../buildout_1.rst:48
# dfe4356dd72f4516ab37c9c157a8f96b
msgid "References"
msgstr ""

#: ../buildout_1.rst:52
# 59cbdf61611743f699cddaab5338064a
msgid "Buildout allows you to use references in the configuration. A variable declaration may not only hold the variable value, but also a reference to where to look for the variable value."
msgstr ""

#: ../buildout_1.rst:54
# b68e729e5c2d4a609a7dc09c28250b72
msgid "If you have a big setup with many Plone sites with minor changes between each configuration, you can generate a template configuration, and each site references everything from the template and overrides just what needs to be changed."
msgstr ""

#: ../buildout_1.rst:56
# f8d082fbf0f6491b83b951a40bec9d96
msgid "Even in smaller buildouts this is a useful feature. We are using `collective.recipe.omelette <https://pypi.python.org/pypi/collective.recipe.omelette>`_. A very practical recipe that creates a virtual directory that eases the navigation to the source code of each egg."
msgstr ""

#: ../buildout_1.rst:58
# 09268e4851984202bf98b3acc4885bb0
msgid "The omelette-recipe needs to know which eggs to reference. We want the same eggs as our instance uses, so we reference the eggs of the instance instead of repeating the whole list."
msgstr ""

#: ../buildout_1.rst:60
# 12aa812e89184b679b63d613c56f0ca1
msgid "Another example: Say you create configuration files for a webserver like nginx, you can define the target port for the reverse proxy by looking it up from the zope2instance recipe."
msgstr ""

#: ../buildout_1.rst:62
# 450b12c3919c4a09b184b1615f00d2dc
msgid "Configuring complex systems always involves a lot of duplication of information. Using references in the buildout configuration allows you to minimize these duplications."
msgstr ""

#: ../buildout_1.rst:65
# fdc570cf6fa049f68ddb1b2fbaa08206
msgid "A real life example"
msgstr ""

#: ../buildout_1.rst:67
# 955c9ebed93844f78f5663041dcecfe7
msgid "Let us walk through the ``buildout.cfg`` for the training and look at some important variables:"
msgstr ""

#: ../buildout_1.rst:149
# c5306c23947e4319a1a560f200d32796
msgid "When you run ``./bin/buildout`` without any arguments, Buildout will look for this file."
msgstr ""

#: ../buildout_1.rst:153
# 0196f976abd246edacb26003b2ef4f09
msgid "Let us look closer at some variables."
msgstr ""

#: ../buildout_1.rst:163
# 3ea063b92d1945b699d62309cc1f706a
msgid "This line tells Buildout to read more configuration files. You can refer to configuration files on your computer or to configuration files on the Internet, reachable via http. You can use multiple configuration files to share configurations between multiple Buildouts, or to separate different aspects of your configuration into different files. Typical examples are version specifications, or configuration that differ between different environments."
msgstr ""

#: ../buildout_1.rst:185
# aed151a75b7047beb2b67fb4dc7a6093
msgid "This is the list of eggs that we configure to be available for Zope. These eggs are put in the python-path of the script ``bin/instance`` with which we start and stop Plone."
msgstr ""

#: ../buildout_1.rst:187
# 55c4caad10de4a0396855ac593ee1ccb
msgid "The egg ``Plone`` is a wrapper without code. Among its dependencies is ``Products.CMFPlone``  which is the egg that is at the center of Plone."
msgstr ""

#: ../buildout_1.rst:189
# e18095768b4a4ca78396bf7c841e75f2
msgid "The rest are addons we already used or will use later. The last eggs are commented out so they will not be installed by Buildout."
msgstr ""

#: ../buildout_1.rst:191
# 32659d704dc647688ef65c39afdbafeb
msgid "The file ``versions.cfg`` that is included by the ``extends = ...`` statement hold the version-pinnings:"
msgstr ""

#: ../buildout_1.rst:202
# 8ad29f95fc0f46e7a48f676078244597
msgid "This is another special section. It has become a special section by declaration. In our :samp:`[buildout]` section we set a variable :samp:`versions = versions`. This told buildout, that there is a section named versions, containing version information. When Buildout installs eggs it will use the version defined in this section."
msgstr ""

#: ../buildout_1.rst:205
# 76b1de357a174035b96709d5a151cf46
msgid "Hello mr.developer!"
msgstr ""

#: ../buildout_1.rst:209
# ed1d5b76dc324411b87d5f04d2c9d64d
msgid "There are many more important things to know, and we can't go through them in all the detail but I want to focus on one specific feature: **mr.developer**"
msgstr ""

#: ../buildout_1.rst:211
# 38bd4426c28e4560b0a11355ca15ea61
msgid "With mr.developer you can declare which packages you want to check out from which version control system and which repository URL. You can check out sources from git, svn, bzr, hg and maybe more. Also, you can say that some source are in your local file system."
msgstr ""

#: ../buildout_1.rst:213
# 9d4ef4a9ca54451d95b748f98f7edfa5
msgid "``mr.developer`` comes with a command, ``./bin/develop``. You can use it to update your code, to check for changes and so on. You can activate and deactivate your source checkouts. If you develop your extensions in eggs with separate checkouts, which is a good practice, you can plan releases by having all source checkouts deactivated, and only activate them, when you write changes that require a new release. You can activate and deactivate eggs via the ``develop`` command or the Buildout configuration. You should always use the Buildout way. Your commit serves as documentation."
msgstr ""

#: ../buildout_1.rst:216
# d4708b32c10d4702bc4a2d416998bd88
msgid "Extensible"
msgstr ""

#: ../buildout_1.rst:220
# aa70ced846d546e898fe0d15c57d1723
msgid "You might have noticed that most if not all functionality is only available via plugins. One of the things that Buildout excels at without any plugin, is the dependency resolution. You can help Plone in dependency resolution by declaring exactly which version of an egg you want. This is only one use case. Another one is much more important: If you want to have a repeatable Buildout, one that works two months from now also, you *must* declare all your egg versions. Else Buildout might install newer versions."
msgstr ""

#: ../buildout_1.rst:223
# 87d23cf182c147cbb9b1309c0bcde101
msgid "Be McGuyver"
msgstr ""

#: ../buildout_1.rst:227
# 8b894fc670894ea4959c05359fad4bbd
msgid "As you can see, you can build very complex systems with Buildout. It is time for some warnings. Be selective in your recipes. Supervisor is a program to manage running servers, its pretty good. There is a recipe for it."
msgstr ""

#: ../buildout_1.rst:229
# f1c706f471a74028a5c43867da5384ff
msgid "The configuration for this recipe is more complicated than the supervisor configuration itself! By using this recipe, you force others to understand the recipes specific configuration syntax *and* the supervisor syntax. For such cases, `collective.recipe.template <https://pypi.python.org/pypi/collective.recipe.template>`_ is a better match."
msgstr ""

#: ../buildout_1.rst:231
# e0e2c265ff9b4958b45e8167e93daedf
msgid "Another problem is error handling. Buildout tries to install a weird dependency you do not actually want? Buildout will not tell you, where it is coming from."
msgstr ""

#: ../buildout_1.rst:233
# f6b77997b61c47008e6a939cb58b7181
msgid "If there is a problem, you can always run Buildout with ``-v``, to get more verbose output, sometimes it helps."
msgstr ""

#: ../buildout_1.rst:239
# 3e99720357754e329235f6541f8f6db9
msgid "If strange egg versions are requested, check the dependencies declaration of your eggs and your version pinnings."
msgstr ""

#: ../buildout_1.rst:241
# 7735963ce54447d599e493f14cbc4234
msgid "Some parts of Buildout interpret egg names case-sensitive, others won't. This can result in funny problems."
msgstr ""

#: ../buildout_1.rst:243
# b73e285b8ab5457c9750cb37a8eb3e8d
msgid "Always check out the ordering of your extends, always use the :samp:`annotate` command of Buildout to see if it interprets your configuration differently than you. Restrict yourself to simple Buildout files. You can reference variables from other sections, you can even use a whole section as a template. We learned that this does not work well with complex hierarchies and had to abandon that feature."
msgstr ""

#: ../buildout_1.rst:245
# 3f844e4035a24e17b0226639af4c99c7
msgid "In the chapter :doc:`deployment_sites` we will have a look at a production-ready for Plone that has many useful features."
msgstr ""

#: ../buildout_1.rst:251
# 4440c74d88ad4b4ba437dd22126cef36
msgid "Buildout-Documentation"
msgstr ""

#: ../buildout_1.rst:250
# a25e15d7db894e38a6511f9bbb4d5cc7
msgid "https://docs.plone.org/old-reference-manuals/buildout/index.html"
msgstr ""

#: ../buildout_1.rst:251
# a8fed26ee2ab4785816f13d9ae1faf1b
msgid "http://www.buildout.org/en/latest/docs/index.html"
msgstr ""

#: ../buildout_1.rst:254
# 799f5b6381764277914f8cfe3187440a
msgid "Troubleshooting"
msgstr ""

#: ../buildout_1.rst:254
# 61b0a2ceb5034ec0bab38416c6441027
msgid "https://docs.plone.org/manage/troubleshooting/buildout.html"
msgstr ""

#: ../buildout_1.rst:259
# d04ec86baa4343febc7e2ea131bb2b8c
msgid "The buildout of the unified installer has some valuable documentation as inline-comment"
msgstr ""

#: ../buildout_1.rst:257
# 9feb12cd72cf40c0948dbd160d381eee
msgid "https://github.com/plone/Installers-UnifiedInstaller/blob/master/buildout_templates/buildout.cfg"
msgstr ""

#: ../buildout_1.rst:258
# 79451b63bbdb4209a99b3186361da9a0
msgid "https://github.com/plone/Installers-UnifiedInstaller/blob/master/base_skeleton/base.cfg"
msgstr ""

#: ../buildout_1.rst:259
# 2413fb490f084f71a0c1a94916e96400
msgid "https://github.com/plone/Installers-UnifiedInstaller/blob/master/base_skeleton/develop.cfg"
msgstr ""

#: ../buildout_1.rst:261
# d4cfd06952894b528372b2a69fb9686c
msgid "mr.developer"
msgstr ""

#: ../buildout_1.rst:262
# 0ba26e1cecf442c1b09dc2ce83581d1e
msgid "https://pypi.python.org/pypi/mr.developer/"
msgstr ""

