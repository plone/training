# 
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-12 23:28-0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../instructions.rst:2
msgid "Installing Plone for the Training"
msgstr ""

#: ../instructions.rst:6
msgid ""
"To not waste too much time with installing and debugging the differences "
"between systems we use a virtual machine (Ubuntu 14.04) to run Plone during "
"the training. We rely on Vagrant and VirtualBox to give the same "
"development-environment to everyone."
msgstr ""

#: ../instructions.rst:8
msgid ""
"`Vagrant <http://www.vagrantup.com>`_ is a tool for building complete "
"development environments. We use it together with Oracle’s `VirtualBox "
"<https://www.virtualbox.org>`_ to create and manage a virtual environment."
msgstr ""

#: ../instructions.rst:10
msgid ""
"Keep in mind that you need a fast internet-connection during the process "
"since you'll have to download a complete virtual machine (ubuntu) and "
"several packages and updates."
msgstr ""

#: ../instructions.rst:14
msgid ""
"We recommend using a virtual machine for the training if you are not used to"
" running Plone on your laptop."
msgstr ""

#: ../instructions.rst:16
msgid ""
"You can also work on your own machine with your own Python if you want to "
"but **please please please** make sure that you have a system that will work"
" since we don't want you to lose valuable time."
msgstr ""

#: ../instructions.rst:18
msgid ""
"If you want to use your own system use the Buildout at "
"https://github.com/starzel/training_without_vagrant.git (since the one we "
"set up with puppet has several directories set to folders not shared with "
"the host)."
msgstr ""

#: ../instructions.rst:20
msgid "Set up Plone for the training like this if you don't want to use a VM:"
msgstr ""

#: ../instructions.rst:33
msgid "Install VirtualBox"
msgstr ""

#: ../instructions.rst:35
msgid ""
"Vagrant uses Oracle’s VirtualBox to create virtual environments. Here is a "
"link directly to the download page: "
"https://www.virtualbox.org/wiki/Downloads. We use VirtualBox  4.3.x."
msgstr ""

#: ../instructions.rst:39
msgid "Install and configure Vagrant"
msgstr ""

#: ../instructions.rst:41
msgid ""
"Get the latest version from http://www.vagrantup.com/downloads for your "
"operating system and install it."
msgstr ""

#: ../instructions.rst:45
msgid ""
"In Windows there is a bug in the recent version of Vagrant. Here are the "
"instruction how to work around the warning ``Vagrant could not detect "
"VirtualBox! Make sure VirtualBox is properly installed``."
msgstr ""

#: ../instructions.rst:47
msgid ""
"Now your system has a command ``vagrant`` that you can run in the terminal."
msgstr ""

#: ../instructions.rst:49
msgid "First create a directory where you want to do the training in."
msgstr ""

#: ../instructions.rst:56
msgid ""
"Setup Vagrant to automatically install the current guest-additions. You can "
"choose to skip this step if you encounter any problems with it."
msgstr ""

#: ../instructions.rst:63
msgid ""
"Now either get the attachmed zip-file (if you read this as a mail) or "
"download it from  "
":download:`http://starzel.github.io/training/plone_training_config.zip "
"<../plone_training_config.zip>`."
msgstr ""

#: ../instructions.rst:63
msgid ""
"and copy its contents into your training directory. It should now hold the "
"file \"Vagrantfile\" and the directory ``manifests``."
msgstr ""

#: ../instructions.rst:65
msgid "Now start setting up the VM that is configured in \"Vagrantfile\""
msgstr ""

#: ../instructions.rst:71
msgid "This takes a **veeeeery loooong time** since it:"
msgstr ""

#: ../instructions.rst:73
msgid ""
"downloads a virtual machine (Official Ubuntu Server 14.04 LTS, also called "
"\"Trusty Tahr\")"
msgstr ""

#: ../instructions.rst:74
msgid "sets up the VM"
msgstr ""

#: ../instructions.rst:75
msgid "updates the VM"
msgstr ""

#: ../instructions.rst:76
msgid "installs various packages needed for Plone development"
msgstr ""

#: ../instructions.rst:77
msgid "downloads and unpack the unified installer for Plone"
msgstr ""

#: ../instructions.rst:78
msgid "runs the unified installer for Plone."
msgstr ""

#: ../instructions.rst:79
msgid "copy the eggs to a location we use in the training"
msgstr ""

#: ../instructions.rst:80
msgid "clones the training-buildout into /vagrant/buildout"
msgstr ""

#: ../instructions.rst:81
msgid "builds Plone using the eggs from the buildout-cache"
msgstr ""

#: ../instructions.rst:85
msgid ""
"Sometimes this stops with the message *Skipping because of failed "
"dependencies*."
msgstr ""

#: ../instructions.rst:91
msgid ""
"If this happens or you have the feeling that something has gone wrong and "
"the installation has not finished correctly for some reason you need to run "
"try   the following command to repeat the process. This will only repeat "
"steps that have not finished correctly."
msgstr ""

#: ../instructions.rst:97
msgid ""
"You can do this multiple times to fix problems, e.g. if your network-"
"connection was down and steps could not finish because of this."
msgstr ""

#: ../instructions.rst:99
msgid ""
"Once Vagrant finishes the provisioning-process, you can login to the now "
"running virtual machine."
msgstr ""

#: ../instructions.rst:107
msgid ""
"If you have to use Windows you'll have to login to with `putty "
"<http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html/download.html>`_. Connect"
" to vagrant@127.0.01 at port 2222. User _and_ password are `vagrant`."
msgstr ""

#: ../instructions.rst:109
msgid ""
"You are now logged in as the user vagrant in ``/home/vagrant``. We'll do all"
" steps of the training as this user."
msgstr ""

#: ../instructions.rst:111
msgid ""
"We pre-installed a fresh Plone for you in the folder "
"``/home/vagrant/Plone/zinstance`` You can run it now and access it from the "
"browser. We will **not** use this Plone-instance in the training, so you can"
" play around with it as much as you want."
msgstr ""

#: ../instructions.rst:113
msgid ""
"Instead we use our own Plone-instance during the training. It is in "
"``/vagrant/buildout/``. Start it in foreground with ``./bin/instance fg``."
msgstr ""

#: ../instructions.rst:126
msgid ""
"Now the Zope-instance we're using is running. You can stop the running "
"instance anytime using ``ctrl + c``."
msgstr ""

#: ../instructions.rst:128
msgid ""
"You can now point your local browser at http://localhost:8080 and see the "
"Plone that is running in vagrant. This works because Virtualbox forwards the"
" port 8080 from the guest-system (the vagrant-Ubuntu) to the host-system "
"(your normal operating-system). Now create a new Plone-Site by clicking "
"\"Create a new Plone-Site\". The username and the password are both "
"\"admin\" (Never do this on a real site!)."
msgstr ""

#: ../instructions.rst:130
msgid ""
"The Buildout for this Plone is in a shared folder, this means we run it in "
"the vagrant-box from ``/vagrant/buildout`` but we can also access it in out "
"own operating-system and use our favorite editor. You will find the "
"directory ``buildout`` in the directory ``training`` that you created in the"
" very beginning next to ``Vagrantfile`` and ``manifests``."
msgstr ""

#: ../instructions.rst:134
msgid ""
"The database and the python-packages are **not accessible** in you own "
"system since large files and you canot use symlinks in shared folders. The "
"database lies in ``/home/vagrant/var``, the python-packages are in "
"``/home/vagrant/omelette``."
msgstr ""

#: ../instructions.rst:136
msgid ""
"If you have any problems or questions please mail us at team@starzel.de"
msgstr ""

#: ../instructions.rst:140
msgid "What Vagrant does"
msgstr ""

#: ../instructions.rst:144
msgid ""
"These steps are automatically done by vagrant and puppet. They are only "
"explained here if you want to know what goes on below the hood."
msgstr ""

#: ../instructions.rst:146
msgid ""
"Puppet does the first installation, Puppet is a tool to automatically manage"
" servers (real and virtual). We won't get into Puppet since it is not that "
"widely used. This is what we basically do if we did it by hand:"
msgstr ""

#: ../instructions.rst:148
msgid "First we update the ubuntu and install some packages."
msgstr ""

#: ../instructions.rst:170
msgid ""
"Then we create a virtual python environement using virtualenv. This is alway"
" a good practice since that way we get a clean copy of our system-python, we"
" can't break it by installing eggs that might collide with other eggs::"
msgstr ""

#: ../instructions.rst:174
msgid "Then we download, unpack and install the unified installer of Plone."
msgstr ""

#: ../instructions.rst:186
msgid ""
"The unified installer is an amazing tool that compiles it's own python, "
"brings with it all the python-eggs we need and puts them in a buildout-"
"cache. It then creates a Buildout and makes Plone ready to run."
msgstr ""

#: ../instructions.rst:188
msgid ""
"We will not actually use this Plone during the training. If you want to use "
"it for your own experiments, you can find it in "
"``/home/vagrant/Plone/zinstance`` on the virtual machine."
msgstr ""

#: ../instructions.rst:190
msgid ""
"Instead vagrant now creates our own little Buildout and only uses the eggs "
"that the unified installer created. First we copy the buildout-cache that "
"holds all the python-packages that Plone consists of."
msgstr ""

#: ../instructions.rst:196
msgid ""
"Then we checkout our tutorial buildout from "
"http://github.com/starzel/training_buildout and build it."
msgstr ""

#: ../instructions.rst:206
msgid "At this point vagrant has finished it's job."
msgstr ""

#: ../instructions.rst:208
msgid "You can now connect to the machine and start plone."
msgstr ""

#: ../instructions.rst:216
msgid ""
"Now we have fresh Buildout based Zope site, ready to get a Plone site. Go to"
" http://localhost:8080 and create a Plone site, only activate the  :guilabel"
":`Dexterity-based Plone Default Types` plugin."
msgstr ""

#: ../instructions.rst:218
msgid ""
"You might wonder, why we use the unified installer. We use the unified "
"installer to set up a cache of packages to download in a much shorter time. "
"Without it, your first Buildout on a fresh computer would take more than "
"half an hour on a good internet connection."
msgstr ""
