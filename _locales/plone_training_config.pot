# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-28 20:53-0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../plone_training_config/instructions.rst:2
# 1ea5b5a9caf3420c95b7e9b3299a75f9
msgid "Installing Plone for the Training"
msgstr ""

#: ../plone_training_config/instructions.rst:6
# f0db3b5576b746d691fed686e262ad0e
msgid "To not waste too much time with installing and debugging the differences between systems we use a virtual machine (Ubuntu 14.04) to run Plone during the training. We rely on Vagrant and VirtualBox to give the same development-environment to everyone."
msgstr ""

#: ../plone_training_config/instructions.rst:8
# d71b3d9b9db849a6ba36d31466c0a620
msgid "`Vagrant <http://www.vagrantup.com>`_ is a tool for building complete development environments. We use it together with Oracle’s `VirtualBox <https://www.virtualbox.org>`_ to create and manage a virtual environment."
msgstr ""

#: ../plone_training_config/instructions.rst:10
# 4085afd7f2444f8f8e204e421a533d13
msgid "Keep in mind that you need a fast internet-connection during the process since you'll have to download a complete virtual machine (ubuntu) and several packages and updates."
msgstr ""

#: ../plone_training_config/instructions.rst:14
# 133cd601a13a4f53bdf669bde8382dea
msgid "We recommend using a virtual machine for the training if you are not used to running Plone on your laptop."
msgstr ""

#: ../plone_training_config/instructions.rst:16
# e170095cdeeb47e3bf10f990d3be18f1
msgid "You can also work on your own machine with your own Python if you want to but **please please please** make sure that you have a system that will work since we don't want you to lose valuable time."
msgstr ""

#: ../plone_training_config/instructions.rst:18
# 8137393dda174a798a9f86d3c2e414cb
msgid "If you want to use your own system use the Buildout at https://github.com/starzel/training_without_vagrant.git (since the one we set up with puppet has several directories set to folders not shared with the host)."
msgstr ""

#: ../plone_training_config/instructions.rst:20
# b3c53d7b5c474ba8accf2b9507c182db
msgid "Set up Plone for the training like this if you don't want to use a VM:"
msgstr ""

#: ../plone_training_config/instructions.rst:33
# 7f4828e77c41469c9e184beccec6564f
msgid "Install VirtualBox"
msgstr ""

#: ../plone_training_config/instructions.rst:35
# 96718a4f71764d77bc0b13cf3cd9026f
msgid "Vagrant uses Oracle’s VirtualBox to create virtual environments. Here is a link directly to the download page: https://www.virtualbox.org/wiki/Downloads. We use VirtualBox  4.3.x."
msgstr ""

#: ../plone_training_config/instructions.rst:39
# 9ddba88ee67a4523ad10a98e368fcb30
msgid "Install and configure Vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:41
# d23d01e8f0d84c4bbf834afde42ee6a5
msgid "Get the latest version from http://www.vagrantup.com/downloads for your operating system and install it."
msgstr ""

#: ../plone_training_config/instructions.rst:45
# 51ebac943d91445e9a89f95a0e59ea9f
msgid "In Windows there is a bug in the recent version of Vagrant. Here are the instruction how to work around the warning ``Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed``."
msgstr ""

#: ../plone_training_config/instructions.rst:47
# 964ddab7647f49a99b4478b9f47c86cc
msgid "Now your system has a command ``vagrant`` that you can run in the terminal."
msgstr ""

#: ../plone_training_config/instructions.rst:49
# 52b7494f6d994183a69a4defe0851f29
msgid "First create a directory where you want to do the training in."
msgstr ""

#: ../plone_training_config/instructions.rst:56
# 0cf30189aa074bd2bc2b4d329aca0f9c
msgid "Setup Vagrant to automatically install the current guest-additions. You can choose to skip this step if you encounter any problems with it."
msgstr ""

#: ../plone_training_config/instructions.rst:63
# 44dba8a96b144552b9e8c5b3c9fcc29d
msgid "Now either get the attached zip-file (if you read this as a mail) or download it from  :download:`http://plone-training.readthedocs.org/en/latest/_downloads/plone_training_config.zip <../plone_training_config.zip>`."
msgstr ""

#: ../plone_training_config/instructions.rst:63
# e2cce4c378db4ea287fae790da5160fd
msgid "and copy its contents into your training directory. It should now hold the file \"Vagrantfile\" and the directory ``manifests``."
msgstr ""

#: ../plone_training_config/instructions.rst:65
# 1e5f38c3b7294dbe918c7e87907417cc
msgid "Now start setting up the VM that is configured in \"Vagrantfile\""
msgstr ""

#: ../plone_training_config/instructions.rst:71
# 3b9e4c747bd04f85bf41c12254da9486
msgid "This takes a **veeeeery loooong time** since it:"
msgstr ""

#: ../plone_training_config/instructions.rst:73
# 4d4093a35d1544638971b4a54195b94e
msgid "downloads a virtual machine (Official Ubuntu Server 14.04 LTS, also called \"Trusty Tahr\")"
msgstr ""

#: ../plone_training_config/instructions.rst:74
# 7d016e4c54184d478a47ab93acf99b1d
msgid "sets up the VM"
msgstr ""

#: ../plone_training_config/instructions.rst:75
# 6dc70f70e72e4ebb9e415a39fb9e5002
msgid "updates the VM"
msgstr ""

#: ../plone_training_config/instructions.rst:76
# ba7fc94bfc0d458ab0654533c454749b
msgid "installs various packages needed for Plone development"
msgstr ""

#: ../plone_training_config/instructions.rst:77
# 7b9be32bc26e4f638f7c36f0b8a28620
msgid "downloads and unpack the unified installer for Plone"
msgstr ""

#: ../plone_training_config/instructions.rst:78
# 8a359e6901b544e099197829ee3407f2
msgid "runs the unified installer for Plone."
msgstr ""

#: ../plone_training_config/instructions.rst:79
# f552e1c4dcc44801b883b869e08efd35
msgid "copy the eggs to a location we use in the training"
msgstr ""

#: ../plone_training_config/instructions.rst:80
# 75cfed1bc536410d8dc5e8c221fea253
msgid "clones the training-buildout into /vagrant/buildout"
msgstr ""

#: ../plone_training_config/instructions.rst:81
# e653d33defc04c2b86cdf2be5af9f6fc
msgid "builds Plone using the eggs from the buildout-cache"
msgstr ""

#: ../plone_training_config/instructions.rst:85
# b6154891b546454db517fcbd53a072c9
msgid "Sometimes this stops with the message *Skipping because of failed dependencies*."
msgstr ""

#: ../plone_training_config/instructions.rst:91
# 5f414305633b4cf49ad8769c1514ddd6
msgid "If this happens or you have the feeling that something has gone wrong and the installation has not finished correctly for some reason you need to run try   the following command to repeat the process. This will only repeat steps that have not finished correctly."
msgstr ""

#: ../plone_training_config/instructions.rst:97
# 9bd099252e824b97b16d2ab70bb369ca
msgid "You can do this multiple times to fix problems, e.g. if your network-connection was down and steps could not finish because of this."
msgstr ""

#: ../plone_training_config/instructions.rst:99
# 68ec7106a2e24713b86f9f87bda05e26
msgid "Once Vagrant finishes the provisioning-process, you can login to the now running virtual machine."
msgstr ""

#: ../plone_training_config/instructions.rst:107
# ce04222f403e4a4bbf42048aa3db6ed9
msgid "If you have to use Windows you'll have to login to with `putty <http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html/download.html>`_. Connect to vagrant@127.0.01 at port 2222. User _and_ password are `vagrant`."
msgstr ""

#: ../plone_training_config/instructions.rst:109
# 7ead314bf5f142ac957f909413e18933
msgid "You are now logged in as the user vagrant in ``/home/vagrant``. We'll do all steps of the training as this user."
msgstr ""

#: ../plone_training_config/instructions.rst:111
# e143adcc6a3848a388f8238ec752a93c
msgid "We pre-installed a fresh Plone for you in the folder ``/home/vagrant/Plone/zinstance`` You can run it now and access it from the browser. We will **not** use this Plone-instance in the training, so you can play around with it as much as you want."
msgstr ""

#: ../plone_training_config/instructions.rst:113
# 4a31198f21af49e3be9a56a8b32714f2
msgid "Instead we use our own Plone-instance during the training. It is in ``/vagrant/buildout/``. Start it in foreground with ``./bin/instance fg``."
msgstr ""

#: ../plone_training_config/instructions.rst:126
# c803bf361bec46de9238bb696b5ad961
msgid "Now the Zope-instance we're using is running. You can stop the running instance anytime using ``ctrl + c``."
msgstr ""

#: ../plone_training_config/instructions.rst:128
# 59252e78c66c4fa3a981aae6092d7cc8
msgid "You can now point your local browser at http://localhost:8080 and see the Plone that is running in vagrant. This works because Virtualbox forwards the port 8080 from the guest-system (the vagrant-Ubuntu) to the host-system (your normal operating-system). Now create a new Plone-Site by clicking \"Create a new Plone-Site\". The username and the password are both \"admin\" (Never do this on a real site!)."
msgstr ""

#: ../plone_training_config/instructions.rst:130
# c585032d2f6945228041720d4710196d
msgid "The Buildout for this Plone is in a shared folder, this means we run it in the vagrant-box from ``/vagrant/buildout`` but we can also access it in out own operating-system and use our favorite editor. You will find the directory ``buildout`` in the directory ``training`` that you created in the very beginning next to ``Vagrantfile`` and ``manifests``."
msgstr ""

#: ../plone_training_config/instructions.rst:134
# e393652bc7aa4c0081ac8dc421884279
msgid "The database and the python-packages are **not accessible** in you own system since large files and you cannot use symlinks in shared folders. The database lies in ``/home/vagrant/var``, the python-packages are in ``/home/vagrant/omelette``."
msgstr ""

#: ../plone_training_config/instructions.rst:136
# 7874945dc65c4299965a6d5808e23502
msgid "If you have any problems or questions please mail us at team@starzel.de"
msgstr ""

#: ../plone_training_config/instructions.rst:140
# f3b66a808f7140e2bec319fd791f6cf5
msgid "What Vagrant does"
msgstr ""

#: ../plone_training_config/instructions.rst:144
# d94008a44b7c401880ee19949dc54a6c
msgid "These steps are automatically done by vagrant and puppet. They are only explained here if you want to know what goes on below the hood."
msgstr ""

#: ../plone_training_config/instructions.rst:146
# 52b7801f20064ec7bb99949949693b81
msgid "Puppet does the first installation, Puppet is a tool to automatically manage servers (real and virtual). We won't get into Puppet since it is not that widely used. This is what we basically do if we did it by hand:"
msgstr ""

#: ../plone_training_config/instructions.rst:148
# e224a91a21b94739a562386b5cff9815
msgid "First we update the ubuntu and install some packages."
msgstr ""

#: ../plone_training_config/instructions.rst:170
# 1e98191f730648d88026ec69c66a353d
msgid "Then we create a virtual python environment using virtualenv. This is alway a good practice since that way we get a clean copy of our system-python, we can't break it by installing eggs that might collide with other eggs::"
msgstr ""

#: ../plone_training_config/instructions.rst:174
# 86390735c2c44a29bf99d1e5fe3afca1
msgid "Then we download, unpack and install the unified installer of Plone."
msgstr ""

#: ../plone_training_config/instructions.rst:186
# b766551149eb4c9fbfa25d59753301ca
msgid "The unified installer is an amazing tool that compiles it's own python, brings with it all the python-eggs we need and puts them in a buildout-cache. It then creates a Buildout and makes Plone ready to run."
msgstr ""

#: ../plone_training_config/instructions.rst:188
# cad3da45929b491ea074a6caa63de43b
msgid "We will not actually use this Plone during the training. If you want to use it for your own experiments, you can find it in ``/home/vagrant/Plone/zinstance`` on the virtual machine."
msgstr ""

#: ../plone_training_config/instructions.rst:190
# 9de98e3048bd45979e420b790f4b8db2
msgid "Instead vagrant now creates our own little Buildout and only uses the eggs that the unified installer created. First we copy the buildout-cache that holds all the python-packages that Plone consists of."
msgstr ""

#: ../plone_training_config/instructions.rst:196
# 844359a545ac428db93d271a1544b006
msgid "Then we checkout our tutorial buildout from http://github.com/starzel/training_buildout and build it."
msgstr ""

#: ../plone_training_config/instructions.rst:206
# 17b8d4b3fabe47289a90e082b5f5556c
msgid "At this point vagrant has finished it's job."
msgstr ""

#: ../plone_training_config/instructions.rst:208
# 5821ef25035b42c8af4cd74cf320e105
msgid "You can now connect to the machine and start plone."
msgstr ""

#: ../plone_training_config/instructions.rst:216
# 234b45ded727420cb81870bbd7fdc93a
msgid "Now we have fresh Buildout based Zope site, ready to get a Plone site. Go to http://localhost:8080 and create a Plone site, only activate the  :guilabel:`Dexterity-based Plone Default Types` plugin."
msgstr ""

#: ../plone_training_config/instructions.rst:218
# 873c6e256e5c4cfb859a994dd7056055
msgid "You might wonder, why we use the unified installer. We use the unified installer to set up a cache of packages to download in a much shorter time. Without it, your first Buildout on a fresh computer would take more than half an hour on a good internet connection."
msgstr ""

