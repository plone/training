# Configuration file for the Sphinx documentation builder.
# Mastering Plone documentation build configuration file

from datetime import datetime
import os


# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = "Plone Training"
copyright = "The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license."
author = 'Plone Community'
trademark_name = "Plone"

now = datetime.now()
year = str(now.year)
# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = year
# The full version, including alpha/beta/rc tags.
release = year

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'


# -- General configuration -----------------------------------------------------

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    'sphinx_copybutton',
    'sphinx_togglebutton',
# TODO Check need of following extenstions
    "sphinx.ext.intersphinx",
    "sphinx.ext.graphviz",
    "sphinx.ext.autodoc",
    "sphinx.ext.todo",
    "sphinxcontrib.spelling",
    "myst_parser",
]

# For more information see:
# https://myst-parser.readthedocs.io/en/latest/syntax/optional.html
myst_enable_extensions = [
    "colon_fence",
    "deflist",
]

# The name of the Pygments (syntax highlighting) style to use.
# pygments_style = 'sphinx.pygments_styles.PyramidStyle'
pygments_style = "sphinx"

# Options for the linkcheck builder
# Ignore localhost
linkcheck_ignore = [
    r"http://localhost:\d+/",
    r"http://localhost:8000",
    r"http://localhost:8080\d+/",
    r"http://localhost:8080",
    r"http://localhost:4200",
    r"http://127.0.0.1:8080",
    r"http://wiki.apache.org",
    r"https://wiki.apache.org",
    r"https://www.vagrantup.com",
    r"https://www.dipf.de/en/research/projects",
    r"http://whatever.herokuapp.com",
    r"http://example.com/news",
    r"http://example.com\d+/",
    r"http://lorempixel.com",
    r"https://plonedemo.kitconcept.com/en/@search",
    r"https://www.packtpub.com",
    r"https://lucidworks.com",
    r"https://twitter.com",  # linkcheck redirects to mobile version
]
linkcheck_anchors = False
linkcheck_timeout = 30

# This is our wordlist with know words, like Github or Plone ...
spelling_word_list_filename = "spelling_wordlist.txt"
spelling_ignore_pypi_package_names = True

# The suffix of source filenames.
source_suffix = {
    ".rst": "restructuredtext",
    ".md": "markdown",
}

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = "index"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [
    ".github/CONTRIBUTING.md",
    "CHANGES.rst",
    "README.rst",
    "_build",
    "bin",
    "env",
    "include",
    "lib",
    "local",
    "log",
    "spelling_wordlist.txt",
    'Thumbs.db',
    '.DS_Store',
    'node_modules',
    'javascript',
    "rst2myst/training/**"
]


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_book_theme"

html_logo = "_static/logo.svg"
html_favicon = "_static/favicon.ico"

html_css_files = ["custom.css"]

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_theme_options = {
    "repository_url": "https://github.com/plone/training",
    "use_repository_button": True,
    "use_issues_button": True,
    "use_edit_page_button": True,
    "extra_navbar": "<p class='ploneorglink'><a href='https://plone.org'><img src='/_static/logo.svg' alt='plone.org' /> plone.org</a></p>",
}



# -- Options for myST markdown conversion to html -------------------------------------------------

myst_enable_extensions = [
    'deflist',
    'linkify',
    # TODO to be discussed: stay with default backticks or convert to colons
    'colon_fence'
]


# This extension can generate automatic links to the documentation of objects in other projects.
# Usage is simple: whenever Sphinx encounters a cross-reference that has no matching target in the current documentation set, it looks for targets in the documentation sets configured in intersphinx_mapping. A reference like :py:class:`zipfile.ZipFile` can then link to the Python documentation for the ZipFile class, without you having to specify where it is located exactly.
# 
# https://www.sphinx-doc.org/en/master/usage/extensions/intersphinx.html
intersphinx_mapping = {
    "plonedocs": ("https://docs.plone.org/", None),
    "python": ("https://docs.python.org/3/", None),
}

